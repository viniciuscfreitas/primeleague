# ========================================
# SCHEMA DEFINITION - PRIME LEAGUE
# ========================================
# Este arquivo é a FONTE DA VERDADE sobre como o banco DEVERIA ser
# O SchemaValidator usa este arquivo para validar a integridade do banco

database:
  name: "primeleague"
  version: "1.0.0"
  description: "Schema definition for Prime League database"

tables:
  # ========================================
  # SISTEMA DE CLÃS
  # ========================================
  clans:
    description: "Tabela principal de clãs"
    primary_key: "id"
    columns:
      id:
        type: "INT"
        nullable: false
        auto_increment: true
        description: "ID único do clã"
      tag:
        type: "VARCHAR(5)"
        nullable: false
        unique: true
        description: "Tag única do clã (ex: ABC)"
      name:
        type: "VARCHAR(32)"
        nullable: false
        description: "Nome completo do clã"
      founder_player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador fundador"
      friendly_fire_enabled:
        type: "BOOLEAN"
        nullable: false
        default: "false"
        description: "Se o friendly fire está habilitado"
      penalty_points:
        type: "INT"
        nullable: false
        default: "0"
        description: "Pontos de penalidade do clã"
      ranking_points:
        type: "INT"
        nullable: false
        default: "0"
        description: "Pontos de ranking do clã"
      creation_date:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Data de criação do clã"
    indexes:
      - name: "idx_clans_tag"
        columns: ["tag"]
        unique: true
      - name: "idx_clans_founder"
        columns: ["founder_player_id"]
      - name: "idx_clans_ranking"
        columns: ["ranking_points"]

  clan_players:
    description: "Relacionamento entre jogadores e clãs"
    primary_key: ["player_id", "clan_id"]
    columns:
      player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador"
      clan_id:
        type: "INT"
        nullable: false
        description: "ID do clã"
      role:
        type: "ENUM('FOUNDER', 'LEADER', 'MEMBER')"
        nullable: false
        default: "MEMBER"
        description: "Role do jogador no clã (FONTE DA VERDADE)"
      join_date:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Data de entrada no clã"
      kills:
        type: "INT"
        nullable: false
        default: "0"
        description: "Número de kills do jogador"
      deaths:
        type: "INT"
        nullable: false
        default: "0"
        description: "Número de mortes do jogador"
    foreign_keys:
      - column: "player_id"
        references: "player_data(player_id)"
        on_delete: "CASCADE"
      - column: "clan_id"
        references: "clans(id)"
        on_delete: "CASCADE"
    indexes:
      - name: "idx_clan_players_clan_id"
        columns: ["clan_id"]
      - name: "idx_clan_players_player_id"
        columns: ["player_id"]
      - name: "idx_clan_players_role"
        columns: ["role"]

  clan_invitations:
    description: "Convites pendentes para clãs"
    primary_key: "id"
    columns:
      id:
        type: "INT"
        nullable: false
        auto_increment: true
        description: "ID único do convite"
      clan_id:
        type: "INT"
        nullable: false
        description: "ID do clã que está convidando"
      inviter_player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador que está convidando"
      target_player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador convidado"
      status:
        type: "ENUM('PENDING', 'ACCEPTED', 'DENIED', 'EXPIRED')"
        nullable: false
        default: "PENDING"
        description: "Status do convite"
      created_at:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Data de criação do convite"
      expires_at:
        type: "TIMESTAMP"
        nullable: false
        description: "Data de expiração do convite"
    foreign_keys:
      - column: "clan_id"
        references: "clans(id)"
        on_delete: "CASCADE"
      - column: "inviter_player_id"
        references: "player_data(player_id)"
        on_delete: "CASCADE"
      - column: "target_player_id"
        references: "player_data(player_id)"
        on_delete: "CASCADE"
    indexes:
      - name: "idx_clan_invitations_clan_id"
        columns: ["clan_id"]
      - name: "idx_clan_invitations_target"
        columns: ["target_player_id"]
      - name: "idx_clan_invitations_status"
        columns: ["status"]

  clan_logs:
    description: "Log de ações realizadas nos clãs"
    primary_key: "id"
    columns:
      id:
        type: "INT"
        nullable: false
        auto_increment: true
        description: "ID único do log"
      clan_id:
        type: "INT"
        nullable: false
        description: "ID do clã"
      actor_player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador que executou a ação"
      actor_name:
        type: "VARCHAR(16)"
        nullable: false
        description: "Nome do jogador que executou a ação"
      action_type:
        type: "INT"
        nullable: false
        description: "Tipo da ação (ID do enum LogActionType)"
      target_player_id:
        type: "INT"
        nullable: true
        description: "ID do jogador alvo da ação (se aplicável)"
      target_name:
        type: "VARCHAR(16)"
        nullable: true
        description: "Nome do jogador alvo da ação"
      details:
        type: "TEXT"
        nullable: true
        description: "Detalhes adicionais da ação
      timestamp:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Data/hora da ação"
    foreign_keys:
      - column: "clan_id"
        references: "clans(id)"
        on_delete: "CASCADE"
      - column: "actor_player_id"
        references: "player_data(player_id)"
        on_delete: "CASCADE"
      - column: "target_player_id"
        references: "player_data(player_id)"
        on_delete: "SET NULL"
    indexes:
      - name: "idx_clan_logs_clan_id"
        columns: ["clan_id"]
      - name: "idx_clan_logs_actor"
        columns: ["actor_player_id"]
      - name: "idx_clan_logs_timestamp"
        columns: ["timestamp"]

  # ========================================
  # SISTEMA DE JOGADORES (P2P)
  # ========================================
  player_data:
    description: "Dados principais dos jogadores"
    primary_key: "player_id"
    columns:
      player_id:
        type: "INT"
        nullable: false
        auto_increment: true
        description: "ID único do jogador"
      uuid:
        type: "VARCHAR(36)"
        nullable: false
        unique: true
        description: "UUID do jogador"
      name:
        type: "VARCHAR(16)"
        nullable: false
        description: "Nome do jogador"
      last_seen:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Última vez que o jogador foi visto"
      verification_status:
        type: "ENUM('PENDING', 'VERIFIED', 'REJECTED')"
        nullable: false
        default: "PENDING"
        description: "Status de verificação do jogador"
      donor_tier:
        type: "INT"
        nullable: false
        default: "0"
        description: "Nível de doador do jogador"
    indexes:
      - name: "idx_player_data_uuid"
        columns: ["uuid"]
        unique: true
      - name: "idx_player_data_name"
        columns: ["name"]
      - name: "idx_player_data_verification"
        columns: ["verification_status"]

  # ========================================
  # SISTEMA ECONÔMICO (ADMIN SHOP)
  # ========================================
  player_balances:
    description: "Saldos dos jogadores"
    primary_key: "player_id"
    columns:
      player_id:
        type: "INT"
        nullable: false
        description: "ID do jogador"
      balance:
        type: "DECIMAL(10,2)"
        nullable: false
        default: "100.00"
        description: "Saldo atual do jogador"
      last_updated:
        type: "TIMESTAMP"
        nullable: false
        default: "CURRENT_TIMESTAMP"
        description: "Última atualização do saldo"
    foreign_keys:
      - column: "player_id"
        references: "player_data(player_id)"
        on_delete: "CASCADE"
    indexes:
      - name: "idx_player_balances_player_id"
        columns: ["player_id"]
        unique: true

# ========================================
# VALIDAÇÕES ESPECÍFICAS
# ========================================
validations:
  # Validações de integridade de dados
  data_integrity:
    - name: "clan_founder_must_be_member"
      description: "Todo clã deve ter seu fundador como membro"
      query: |
        SELECT c.id, c.tag, c.founder_player_id
        FROM clans c
        LEFT JOIN clan_players cp ON c.id = cp.clan_id AND cp.player_id = c.founder_player_id
        WHERE cp.player_id IS NULL
      severity: "ERROR"
      message: "Clã {tag} (ID: {id}) não tem seu fundador como membro"

    - name: "no_orphaned_clan_players"
      description: "Não deve haver jogadores em clãs inexistentes"
      query: |
        SELECT cp.player_id, cp.clan_id
        FROM clan_players cp
        LEFT JOIN clan_players c ON cp.clan_id = c.id
        WHERE c.id IS NULL
      severity: "ERROR"
      message: "Jogador {player_id} está em clã inexistente {clan_id}"

    - name: "no_orphaned_player_references"
      description: "Não deve haver referências a jogadores inexistentes"
      query: |
        SELECT cp.player_id, cp.clan_id
        FROM clan_players cp
        LEFT JOIN player_data pd ON cp.player_id = pd.player_id
        WHERE pd.player_id IS NULL
      severity: "Jogador {player_id} referenciado em clã {clan_id} não existe"

# ========================================
# CONFIGURAÇÕES DE VALIDAÇÃO
# ========================================
validation_config:
  fail_on_mismatch: true  # Parar servidor se houver inconsistências
  log_level: "DETAILED"   # NONE, ERRORS, DETAILED
  auto_fix: false         # Tentar corrigir automaticamente (perigoso)
  health_check_interval: 3600  # Verificação de saúde a cada 1 hora

